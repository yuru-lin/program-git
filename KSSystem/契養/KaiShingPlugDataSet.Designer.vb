'------------------------------------------------------------------------------
' <auto-generated>
'     這段程式碼是由工具產生的。
'     執行階段版本:2.0.50727.5485
'
'     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
'     變更將會遺失。
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("KaiShingPlugDataSet"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class KaiShingPlugDataSet
    Inherits Global.System.Data.DataSet
    
    Private tableV_FdCk As V_FdCkDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("V_FdCk")) Is Nothing) Then
                MyBase.Tables.Add(New V_FdCkDataTable(ds.Tables("V_FdCk")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property V_FdCk() As V_FdCkDataTable
        Get
            Return Me.tableV_FdCk
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As KaiShingPlugDataSet = CType(MyBase.Clone,KaiShingPlugDataSet)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("V_FdCk")) Is Nothing) Then
                MyBase.Tables.Add(New V_FdCkDataTable(ds.Tables("V_FdCk")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableV_FdCk = CType(MyBase.Tables("V_FdCk"),V_FdCkDataTable)
        If (initTable = true) Then
            If (Not (Me.tableV_FdCk) Is Nothing) Then
                Me.tableV_FdCk.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "KaiShingPlugDataSet"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/KaiShingPlugDataSet.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableV_FdCk = New V_FdCkDataTable
        MyBase.Tables.Add(Me.tableV_FdCk)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeV_FdCk() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As KaiShingPlugDataSet = New KaiShingPlugDataSet
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub V_FdCkRowChangeEventHandler(ByVal sender As Object, ByVal e As V_FdCkRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class V_FdCkDataTable
        Inherits Global.System.Data.TypedTableBase(Of V_FdCkRow)
        
        Private columnFdCk_ID As Global.System.Data.DataColumn
        
        Private columnSerialID As Global.System.Data.DataColumn
        
        Private columnInCk_date As Global.System.Data.DataColumn
        
        Private columnOutCk_date As Global.System.Data.DataColumn
        
        Private columnInCk_Num As Global.System.Data.DataColumn
        
        Private columnOutCk_Num As Global.System.Data.DataColumn
        
        Private columnSumCk_Num As Global.System.Data.DataColumn
        
        Private columnGrow_Rate As Global.System.Data.DataColumn
        
        Private columnFeed_weight As Global.System.Data.DataColumn
        
        Private columnBack_weight As Global.System.Data.DataColumn
        
        Private columnConver_Rate As Global.System.Data.DataColumn
        
        Private columnCk_Square As Global.System.Data.DataColumn
        
        Private columnSquare_Num As Global.System.Data.DataColumn
        
        Private columnCk_Freight As Global.System.Data.DataColumn
        
        Private columnCk_Feed As Global.System.Data.DataColumn
        
        Private columnECk_Cost As Global.System.Data.DataColumn
        
        Private columnFCk_Cost As Global.System.Data.DataColumn
        
        Private columnFeed_Cost As Global.System.Data.DataColumn
        
        Private columnBack_Cost As Global.System.Data.DataColumn
        
        Private columnMulite_Exp As Global.System.Data.DataColumn
        
        Private columnBal_Exp As Global.System.Data.DataColumn
        
        Private columnECk_Rate As Global.System.Data.DataColumn
        
        Private columnFCk_Rate As Global.System.Data.DataColumn
        
        Private columnFeed_Rate As Global.System.Data.DataColumn
        
        Private columnBack_Rate As Global.System.Data.DataColumn
        
        Private columnMulite_Rate As Global.System.Data.DataColumn
        
        Private columnBal_Exp_Rate As Global.System.Data.DataColumn
        
        Private columnCk_Days As Global.System.Data.DataColumn
        
        Private columnChaff As Global.System.Data.DataColumn
        
        Private columnDisease_Pay As Global.System.Data.DataColumn
        
        Private columnPower_Bill As Global.System.Data.DataColumn
        
        Private columnFirstStage As Global.System.Data.DataColumn
        
        Private columnSecondStage As Global.System.Data.DataColumn
        
        Private columnThridStage As Global.System.Data.DataColumn
        
        Private columnFourthStage As Global.System.Data.DataColumn
        
        Private columnCK_Medicine_R1 As Global.System.Data.DataColumn
        
        Private columnCK_Medicine_R2 As Global.System.Data.DataColumn
        
        Private columnCK_Medicine_R3 As Global.System.Data.DataColumn
        
        Private columnCK_Medicine_R4 As Global.System.Data.DataColumn
        
        Private columnCK_Medicine_R1Amt As Global.System.Data.DataColumn
        
        Private columnCK_Medicine_R2Amt As Global.System.Data.DataColumn
        
        Private columnCK_Medicine_R3Amt As Global.System.Data.DataColumn
        
        Private columnCK_Medicine_R4Amt As Global.System.Data.DataColumn
        
        Private columnSubcontract_Pay As Global.System.Data.DataColumn
        
        Private columnCatchCk_Pay As Global.System.Data.DataColumn
        
        Private columnTrackAmt As Global.System.Data.DataColumn
        
        Private columnSumAmt As Global.System.Data.DataColumn
        
        Private columnRemark As Global.System.Data.DataColumn
        
        Private columnFdList_ID As Global.System.Data.DataColumn
        
        Private columnExpr1 As Global.System.Data.DataColumn
        
        Private columnCkKind_List As Global.System.Data.DataColumn
        
        Private columnFatherCk As Global.System.Data.DataColumn
        
        Private columnMotherCk As Global.System.Data.DataColumn
        
        Private columnSumCk As Global.System.Data.DataColumn
        
        Private columnFatherCk_Avg As Global.System.Data.DataColumn
        
        Private columnMotherCk_Avg As Global.System.Data.DataColumn
        
        Private columnRegard_Avg As Global.System.Data.DataColumn
        
        Private columnCk_Avg As Global.System.Data.DataColumn
        
        Private columnExpr2 As Global.System.Data.DataColumn
        
        Private columnCkkind As Global.System.Data.DataColumn
        
        Private columnReturnQuantity As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "V_FdCk"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FdCk_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFdCk_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SerialIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSerialID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property InCk_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInCk_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OutCk_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOutCk_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property InCk_NumColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInCk_Num
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OutCk_NumColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOutCk_Num
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SumCk_NumColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSumCk_Num
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Grow_RateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGrow_Rate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Feed_weightColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFeed_weight
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Back_weightColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBack_weight
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Conver_RateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnConver_Rate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Ck_SquareColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCk_Square
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Square_NumColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSquare_Num
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Ck_FreightColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCk_Freight
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Ck_FeedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCk_Feed
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ECk_CostColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnECk_Cost
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FCk_CostColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFCk_Cost
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Feed_CostColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFeed_Cost
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Back_CostColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBack_Cost
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Mulite_ExpColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMulite_Exp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Bal_ExpColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBal_Exp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ECk_RateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnECk_Rate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FCk_RateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFCk_Rate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Feed_RateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFeed_Rate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Back_RateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBack_Rate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Mulite_RateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMulite_Rate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Bal_Exp_RateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBal_Exp_Rate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Ck_DaysColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCk_Days
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ChaffColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnChaff
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Disease_PayColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDisease_Pay
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Power_BillColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPower_Bill
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FirstStageColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFirstStage
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SecondStageColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSecondStage
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ThridStageColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnThridStage
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FourthStageColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFourthStage
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CK_Medicine_R1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCK_Medicine_R1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CK_Medicine_R2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCK_Medicine_R2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CK_Medicine_R3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCK_Medicine_R3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CK_Medicine_R4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCK_Medicine_R4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CK_Medicine_R1AmtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCK_Medicine_R1Amt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CK_Medicine_R2AmtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCK_Medicine_R2Amt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CK_Medicine_R3AmtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCK_Medicine_R3Amt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CK_Medicine_R4AmtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCK_Medicine_R4Amt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Subcontract_PayColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubcontract_Pay
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CatchCk_PayColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCatchCk_Pay
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TrackAmtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTrackAmt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SumAmtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSumAmt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RemarkColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRemark
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FdList_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFdList_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Expr1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnExpr1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CkKind_ListColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCkKind_List
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FatherCkColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFatherCk
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MotherCkColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMotherCk
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SumCkColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSumCk
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FatherCk_AvgColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFatherCk_Avg
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MotherCk_AvgColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMotherCk_Avg
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Regard_AvgColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRegard_Avg
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Ck_AvgColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCk_Avg
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Expr2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnExpr2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CkkindColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCkkind
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ReturnQuantityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReturnQuantity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As V_FdCkRow
            Get
                Return CType(Me.Rows(index),V_FdCkRow)
            End Get
        End Property
        
        Public Event V_FdCkRowChanging As V_FdCkRowChangeEventHandler
        
        Public Event V_FdCkRowChanged As V_FdCkRowChangeEventHandler
        
        Public Event V_FdCkRowDeleting As V_FdCkRowChangeEventHandler
        
        Public Event V_FdCkRowDeleted As V_FdCkRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddV_FdCkRow(ByVal row As V_FdCkRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddV_FdCkRow( _
                    ByVal FdCk_ID As Integer,  _
                    ByVal SerialID As String,  _
                    ByVal InCk_date As Date,  _
                    ByVal OutCk_date As Date,  _
                    ByVal InCk_Num As Double,  _
                    ByVal OutCk_Num As Double,  _
                    ByVal SumCk_Num As String,  _
                    ByVal Grow_Rate As String,  _
                    ByVal Feed_weight As Double,  _
                    ByVal Back_weight As Double,  _
                    ByVal Conver_Rate As String,  _
                    ByVal Ck_Square As String,  _
                    ByVal Square_Num As String,  _
                    ByVal Ck_Freight As String,  _
                    ByVal Ck_Feed As String,  _
                    ByVal ECk_Cost As Double,  _
                    ByVal FCk_Cost As Double,  _
                    ByVal Feed_Cost As Double,  _
                    ByVal Back_Cost As String,  _
                    ByVal Mulite_Exp As String,  _
                    ByVal Bal_Exp As String,  _
                    ByVal ECk_Rate As String,  _
                    ByVal FCk_Rate As String,  _
                    ByVal Feed_Rate As String,  _
                    ByVal Back_Rate As String,  _
                    ByVal Mulite_Rate As String,  _
                    ByVal Bal_Exp_Rate As String,  _
                    ByVal Ck_Days As String,  _
                    ByVal Chaff As Double,  _
                    ByVal Disease_Pay As Double,  _
                    ByVal Power_Bill As Double,  _
                    ByVal FirstStage As String,  _
                    ByVal SecondStage As String,  _
                    ByVal ThridStage As String,  _
                    ByVal FourthStage As String,  _
                    ByVal CK_Medicine_R1 As String,  _
                    ByVal CK_Medicine_R2 As String,  _
                    ByVal CK_Medicine_R3 As String,  _
                    ByVal CK_Medicine_R4 As String,  _
                    ByVal CK_Medicine_R1Amt As Double,  _
                    ByVal CK_Medicine_R2Amt As Double,  _
                    ByVal CK_Medicine_R3Amt As Double,  _
                    ByVal CK_Medicine_R4Amt As Double,  _
                    ByVal Subcontract_Pay As Double,  _
                    ByVal CatchCk_Pay As Double,  _
                    ByVal TrackAmt As Double,  _
                    ByVal SumAmt As Double,  _
                    ByVal Remark As String,  _
                    ByVal FdList_ID As Integer,  _
                    ByVal Expr1 As String,  _
                    ByVal CkKind_List As String,  _
                    ByVal FatherCk As String,  _
                    ByVal MotherCk As String,  _
                    ByVal SumCk As Double,  _
                    ByVal FatherCk_Avg As Double,  _
                    ByVal MotherCk_Avg As Double,  _
                    ByVal Regard_Avg As Double,  _
                    ByVal Ck_Avg As String,  _
                    ByVal Expr2 As String,  _
                    ByVal Ckkind As String,  _
                    ByVal ReturnQuantity As Double) As V_FdCkRow
            Dim rowV_FdCkRow As V_FdCkRow = CType(Me.NewRow,V_FdCkRow)
            Dim columnValuesArray() As Object = New Object() {FdCk_ID, SerialID, InCk_date, OutCk_date, InCk_Num, OutCk_Num, SumCk_Num, Grow_Rate, Feed_weight, Back_weight, Conver_Rate, Ck_Square, Square_Num, Ck_Freight, Ck_Feed, ECk_Cost, FCk_Cost, Feed_Cost, Back_Cost, Mulite_Exp, Bal_Exp, ECk_Rate, FCk_Rate, Feed_Rate, Back_Rate, Mulite_Rate, Bal_Exp_Rate, Ck_Days, Chaff, Disease_Pay, Power_Bill, FirstStage, SecondStage, ThridStage, FourthStage, CK_Medicine_R1, CK_Medicine_R2, CK_Medicine_R3, CK_Medicine_R4, CK_Medicine_R1Amt, CK_Medicine_R2Amt, CK_Medicine_R3Amt, CK_Medicine_R4Amt, Subcontract_Pay, CatchCk_Pay, TrackAmt, SumAmt, Remark, FdList_ID, Expr1, CkKind_List, FatherCk, MotherCk, SumCk, FatherCk_Avg, MotherCk_Avg, Regard_Avg, Ck_Avg, Expr2, Ckkind, ReturnQuantity}
            rowV_FdCkRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowV_FdCkRow)
            Return rowV_FdCkRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As V_FdCkDataTable = CType(MyBase.Clone,V_FdCkDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New V_FdCkDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnFdCk_ID = MyBase.Columns("FdCk_ID")
            Me.columnSerialID = MyBase.Columns("SerialID")
            Me.columnInCk_date = MyBase.Columns("InCk_date")
            Me.columnOutCk_date = MyBase.Columns("OutCk_date")
            Me.columnInCk_Num = MyBase.Columns("InCk_Num")
            Me.columnOutCk_Num = MyBase.Columns("OutCk_Num")
            Me.columnSumCk_Num = MyBase.Columns("SumCk_Num")
            Me.columnGrow_Rate = MyBase.Columns("Grow_Rate")
            Me.columnFeed_weight = MyBase.Columns("Feed_weight")
            Me.columnBack_weight = MyBase.Columns("Back_weight")
            Me.columnConver_Rate = MyBase.Columns("Conver_Rate")
            Me.columnCk_Square = MyBase.Columns("Ck_Square")
            Me.columnSquare_Num = MyBase.Columns("Square_Num")
            Me.columnCk_Freight = MyBase.Columns("Ck_Freight")
            Me.columnCk_Feed = MyBase.Columns("Ck_Feed")
            Me.columnECk_Cost = MyBase.Columns("ECk_Cost")
            Me.columnFCk_Cost = MyBase.Columns("FCk_Cost")
            Me.columnFeed_Cost = MyBase.Columns("Feed_Cost")
            Me.columnBack_Cost = MyBase.Columns("Back_Cost")
            Me.columnMulite_Exp = MyBase.Columns("Mulite_Exp")
            Me.columnBal_Exp = MyBase.Columns("Bal_Exp")
            Me.columnECk_Rate = MyBase.Columns("ECk_Rate")
            Me.columnFCk_Rate = MyBase.Columns("FCk_Rate")
            Me.columnFeed_Rate = MyBase.Columns("Feed_Rate")
            Me.columnBack_Rate = MyBase.Columns("Back_Rate")
            Me.columnMulite_Rate = MyBase.Columns("Mulite_Rate")
            Me.columnBal_Exp_Rate = MyBase.Columns("Bal_Exp_Rate")
            Me.columnCk_Days = MyBase.Columns("Ck_Days")
            Me.columnChaff = MyBase.Columns("Chaff")
            Me.columnDisease_Pay = MyBase.Columns("Disease_Pay")
            Me.columnPower_Bill = MyBase.Columns("Power_Bill")
            Me.columnFirstStage = MyBase.Columns("FirstStage")
            Me.columnSecondStage = MyBase.Columns("SecondStage")
            Me.columnThridStage = MyBase.Columns("ThridStage")
            Me.columnFourthStage = MyBase.Columns("FourthStage")
            Me.columnCK_Medicine_R1 = MyBase.Columns("CK_Medicine_R1")
            Me.columnCK_Medicine_R2 = MyBase.Columns("CK_Medicine_R2")
            Me.columnCK_Medicine_R3 = MyBase.Columns("CK_Medicine_R3")
            Me.columnCK_Medicine_R4 = MyBase.Columns("CK_Medicine_R4")
            Me.columnCK_Medicine_R1Amt = MyBase.Columns("CK_Medicine_R1Amt")
            Me.columnCK_Medicine_R2Amt = MyBase.Columns("CK_Medicine_R2Amt")
            Me.columnCK_Medicine_R3Amt = MyBase.Columns("CK_Medicine_R3Amt")
            Me.columnCK_Medicine_R4Amt = MyBase.Columns("CK_Medicine_R4Amt")
            Me.columnSubcontract_Pay = MyBase.Columns("Subcontract_Pay")
            Me.columnCatchCk_Pay = MyBase.Columns("CatchCk_Pay")
            Me.columnTrackAmt = MyBase.Columns("TrackAmt")
            Me.columnSumAmt = MyBase.Columns("SumAmt")
            Me.columnRemark = MyBase.Columns("Remark")
            Me.columnFdList_ID = MyBase.Columns("FdList_ID")
            Me.columnExpr1 = MyBase.Columns("Expr1")
            Me.columnCkKind_List = MyBase.Columns("CkKind_List")
            Me.columnFatherCk = MyBase.Columns("FatherCk")
            Me.columnMotherCk = MyBase.Columns("MotherCk")
            Me.columnSumCk = MyBase.Columns("SumCk")
            Me.columnFatherCk_Avg = MyBase.Columns("FatherCk_Avg")
            Me.columnMotherCk_Avg = MyBase.Columns("MotherCk_Avg")
            Me.columnRegard_Avg = MyBase.Columns("Regard_Avg")
            Me.columnCk_Avg = MyBase.Columns("Ck_Avg")
            Me.columnExpr2 = MyBase.Columns("Expr2")
            Me.columnCkkind = MyBase.Columns("Ckkind")
            Me.columnReturnQuantity = MyBase.Columns("ReturnQuantity")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnFdCk_ID = New Global.System.Data.DataColumn("FdCk_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFdCk_ID)
            Me.columnSerialID = New Global.System.Data.DataColumn("SerialID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSerialID)
            Me.columnInCk_date = New Global.System.Data.DataColumn("InCk_date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInCk_date)
            Me.columnOutCk_date = New Global.System.Data.DataColumn("OutCk_date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOutCk_date)
            Me.columnInCk_Num = New Global.System.Data.DataColumn("InCk_Num", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInCk_Num)
            Me.columnOutCk_Num = New Global.System.Data.DataColumn("OutCk_Num", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOutCk_Num)
            Me.columnSumCk_Num = New Global.System.Data.DataColumn("SumCk_Num", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSumCk_Num)
            Me.columnGrow_Rate = New Global.System.Data.DataColumn("Grow_Rate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGrow_Rate)
            Me.columnFeed_weight = New Global.System.Data.DataColumn("Feed_weight", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFeed_weight)
            Me.columnBack_weight = New Global.System.Data.DataColumn("Back_weight", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBack_weight)
            Me.columnConver_Rate = New Global.System.Data.DataColumn("Conver_Rate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnConver_Rate)
            Me.columnCk_Square = New Global.System.Data.DataColumn("Ck_Square", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCk_Square)
            Me.columnSquare_Num = New Global.System.Data.DataColumn("Square_Num", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSquare_Num)
            Me.columnCk_Freight = New Global.System.Data.DataColumn("Ck_Freight", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCk_Freight)
            Me.columnCk_Feed = New Global.System.Data.DataColumn("Ck_Feed", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCk_Feed)
            Me.columnECk_Cost = New Global.System.Data.DataColumn("ECk_Cost", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnECk_Cost)
            Me.columnFCk_Cost = New Global.System.Data.DataColumn("FCk_Cost", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFCk_Cost)
            Me.columnFeed_Cost = New Global.System.Data.DataColumn("Feed_Cost", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFeed_Cost)
            Me.columnBack_Cost = New Global.System.Data.DataColumn("Back_Cost", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBack_Cost)
            Me.columnMulite_Exp = New Global.System.Data.DataColumn("Mulite_Exp", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMulite_Exp)
            Me.columnBal_Exp = New Global.System.Data.DataColumn("Bal_Exp", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBal_Exp)
            Me.columnECk_Rate = New Global.System.Data.DataColumn("ECk_Rate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnECk_Rate)
            Me.columnFCk_Rate = New Global.System.Data.DataColumn("FCk_Rate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFCk_Rate)
            Me.columnFeed_Rate = New Global.System.Data.DataColumn("Feed_Rate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFeed_Rate)
            Me.columnBack_Rate = New Global.System.Data.DataColumn("Back_Rate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBack_Rate)
            Me.columnMulite_Rate = New Global.System.Data.DataColumn("Mulite_Rate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMulite_Rate)
            Me.columnBal_Exp_Rate = New Global.System.Data.DataColumn("Bal_Exp_Rate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBal_Exp_Rate)
            Me.columnCk_Days = New Global.System.Data.DataColumn("Ck_Days", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCk_Days)
            Me.columnChaff = New Global.System.Data.DataColumn("Chaff", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnChaff)
            Me.columnDisease_Pay = New Global.System.Data.DataColumn("Disease_Pay", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDisease_Pay)
            Me.columnPower_Bill = New Global.System.Data.DataColumn("Power_Bill", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPower_Bill)
            Me.columnFirstStage = New Global.System.Data.DataColumn("FirstStage", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFirstStage)
            Me.columnSecondStage = New Global.System.Data.DataColumn("SecondStage", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSecondStage)
            Me.columnThridStage = New Global.System.Data.DataColumn("ThridStage", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnThridStage)
            Me.columnFourthStage = New Global.System.Data.DataColumn("FourthStage", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFourthStage)
            Me.columnCK_Medicine_R1 = New Global.System.Data.DataColumn("CK_Medicine_R1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCK_Medicine_R1)
            Me.columnCK_Medicine_R2 = New Global.System.Data.DataColumn("CK_Medicine_R2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCK_Medicine_R2)
            Me.columnCK_Medicine_R3 = New Global.System.Data.DataColumn("CK_Medicine_R3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCK_Medicine_R3)
            Me.columnCK_Medicine_R4 = New Global.System.Data.DataColumn("CK_Medicine_R4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCK_Medicine_R4)
            Me.columnCK_Medicine_R1Amt = New Global.System.Data.DataColumn("CK_Medicine_R1Amt", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCK_Medicine_R1Amt)
            Me.columnCK_Medicine_R2Amt = New Global.System.Data.DataColumn("CK_Medicine_R2Amt", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCK_Medicine_R2Amt)
            Me.columnCK_Medicine_R3Amt = New Global.System.Data.DataColumn("CK_Medicine_R3Amt", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCK_Medicine_R3Amt)
            Me.columnCK_Medicine_R4Amt = New Global.System.Data.DataColumn("CK_Medicine_R4Amt", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCK_Medicine_R4Amt)
            Me.columnSubcontract_Pay = New Global.System.Data.DataColumn("Subcontract_Pay", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubcontract_Pay)
            Me.columnCatchCk_Pay = New Global.System.Data.DataColumn("CatchCk_Pay", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCatchCk_Pay)
            Me.columnTrackAmt = New Global.System.Data.DataColumn("TrackAmt", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTrackAmt)
            Me.columnSumAmt = New Global.System.Data.DataColumn("SumAmt", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSumAmt)
            Me.columnRemark = New Global.System.Data.DataColumn("Remark", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRemark)
            Me.columnFdList_ID = New Global.System.Data.DataColumn("FdList_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFdList_ID)
            Me.columnExpr1 = New Global.System.Data.DataColumn("Expr1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExpr1)
            Me.columnCkKind_List = New Global.System.Data.DataColumn("CkKind_List", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCkKind_List)
            Me.columnFatherCk = New Global.System.Data.DataColumn("FatherCk", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFatherCk)
            Me.columnMotherCk = New Global.System.Data.DataColumn("MotherCk", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMotherCk)
            Me.columnSumCk = New Global.System.Data.DataColumn("SumCk", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSumCk)
            Me.columnFatherCk_Avg = New Global.System.Data.DataColumn("FatherCk_Avg", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFatherCk_Avg)
            Me.columnMotherCk_Avg = New Global.System.Data.DataColumn("MotherCk_Avg", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMotherCk_Avg)
            Me.columnRegard_Avg = New Global.System.Data.DataColumn("Regard_Avg", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRegard_Avg)
            Me.columnCk_Avg = New Global.System.Data.DataColumn("Ck_Avg", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCk_Avg)
            Me.columnExpr2 = New Global.System.Data.DataColumn("Expr2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExpr2)
            Me.columnCkkind = New Global.System.Data.DataColumn("Ckkind", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCkkind)
            Me.columnReturnQuantity = New Global.System.Data.DataColumn("ReturnQuantity", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReturnQuantity)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnFdCk_ID, Me.columnSerialID, Me.columnFdList_ID, Me.columnExpr1}, false))
            Me.columnFdCk_ID.AllowDBNull = false
            Me.columnSerialID.AllowDBNull = false
            Me.columnSerialID.MaxLength = 50
            Me.columnSumCk_Num.MaxLength = 50
            Me.columnGrow_Rate.MaxLength = 50
            Me.columnConver_Rate.MaxLength = 50
            Me.columnCk_Square.MaxLength = 50
            Me.columnSquare_Num.MaxLength = 50
            Me.columnCk_Freight.MaxLength = 50
            Me.columnCk_Feed.MaxLength = 50
            Me.columnBack_Cost.MaxLength = 50
            Me.columnMulite_Exp.MaxLength = 50
            Me.columnBal_Exp.MaxLength = 50
            Me.columnECk_Rate.MaxLength = 50
            Me.columnFCk_Rate.MaxLength = 50
            Me.columnFeed_Rate.MaxLength = 50
            Me.columnBack_Rate.MaxLength = 50
            Me.columnMulite_Rate.MaxLength = 50
            Me.columnBal_Exp_Rate.MaxLength = 50
            Me.columnCk_Days.MaxLength = 50
            Me.columnFirstStage.MaxLength = 50
            Me.columnSecondStage.MaxLength = 50
            Me.columnThridStage.MaxLength = 50
            Me.columnFourthStage.MaxLength = 50
            Me.columnCK_Medicine_R1.MaxLength = 50
            Me.columnCK_Medicine_R2.MaxLength = 50
            Me.columnCK_Medicine_R3.MaxLength = 50
            Me.columnCK_Medicine_R4.MaxLength = 50
            Me.columnRemark.MaxLength = 2000
            Me.columnExpr1.MaxLength = 50
            Me.columnCkKind_List.MaxLength = 50
            Me.columnFatherCk.MaxLength = 50
            Me.columnMotherCk.MaxLength = 50
            Me.columnCk_Avg.MaxLength = 50
            Me.columnExpr2.MaxLength = 50
            Me.columnCkkind.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewV_FdCkRow() As V_FdCkRow
            Return CType(Me.NewRow,V_FdCkRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New V_FdCkRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(V_FdCkRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.V_FdCkRowChangedEvent) Is Nothing) Then
                RaiseEvent V_FdCkRowChanged(Me, New V_FdCkRowChangeEvent(CType(e.Row,V_FdCkRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.V_FdCkRowChangingEvent) Is Nothing) Then
                RaiseEvent V_FdCkRowChanging(Me, New V_FdCkRowChangeEvent(CType(e.Row,V_FdCkRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.V_FdCkRowDeletedEvent) Is Nothing) Then
                RaiseEvent V_FdCkRowDeleted(Me, New V_FdCkRowChangeEvent(CType(e.Row,V_FdCkRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.V_FdCkRowDeletingEvent) Is Nothing) Then
                RaiseEvent V_FdCkRowDeleting(Me, New V_FdCkRowChangeEvent(CType(e.Row,V_FdCkRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveV_FdCkRow(ByVal row As V_FdCkRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As KaiShingPlugDataSet = New KaiShingPlugDataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "V_FdCkDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class V_FdCkRow
        Inherits Global.System.Data.DataRow
        
        Private tableV_FdCk As V_FdCkDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableV_FdCk = CType(Me.Table,V_FdCkDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FdCk_ID() As Integer
            Get
                Return CType(Me(Me.tableV_FdCk.FdCk_IDColumn),Integer)
            End Get
            Set
                Me(Me.tableV_FdCk.FdCk_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SerialID() As String
            Get
                Return CType(Me(Me.tableV_FdCk.SerialIDColumn),String)
            End Get
            Set
                Me(Me.tableV_FdCk.SerialIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property InCk_date() As Date
            Get
                Try 
                    Return CType(Me(Me.tableV_FdCk.InCk_dateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("資料表 'V_FdCk' 中資料行 'InCk_date' 的值是 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tableV_FdCk.InCk_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property OutCk_date() As Date
            Get
                Try 
                    Return CType(Me(Me.tableV_FdCk.OutCk_dateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("資料表 'V_FdCk' 中資料行 'OutCk_date' 的值是 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tableV_FdCk.OutCk_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property InCk_Num() As Double
            Get
                Try 
                    Return CType(Me(Me.tableV_FdCk.InCk_NumColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("資料表 'V_FdCk' 中資料行 'InCk_Num' 的值是 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tableV_FdCk.InCk_NumColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property OutCk_Num() As Double
            Get
                Try 
                    Return CType(Me(Me.tableV_FdCk.OutCk_NumColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("資料表 'V_FdCk' 中資料行 'OutCk_Num' 的值是 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tableV_FdCk.OutCk_NumColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SumCk_Num() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_FdCk.SumCk_NumColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("資料表 'V_FdCk' 中資料行 'SumCk_Num' 的值是 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tableV_FdCk.SumCk_NumColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Grow_Rate() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_FdCk.Grow_RateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("資料表 'V_FdCk' 中資料行 'Grow_Rate' 的值是 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tableV_FdCk.Grow_RateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Feed_weight() As Double
            Get
                Try 
                    Return CType(Me(Me.tableV_FdCk.Feed_weightColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("資料表 'V_FdCk' 中資料行 'Feed_weight' 的值是 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tableV_FdCk.Feed_weightColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Back_weight() As Double
            Get
                Try 
                    Return CType(Me(Me.tableV_FdCk.Back_weightColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("資料表 'V_FdCk' 中資料行 'Back_weight' 的值是 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tableV_FdCk.Back_weightColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Conver_Rate() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_FdCk.Conver_RateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("資料表 'V_FdCk' 中資料行 'Conver_Rate' 的值是 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tableV_FdCk.Conver_RateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Ck_Square() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_FdCk.Ck_SquareColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("資料表 'V_FdCk' 中資料行 'Ck_Square' 的值是 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tableV_FdCk.Ck_SquareColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Square_Num() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_FdCk.Square_NumColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("資料表 'V_FdCk' 中資料行 'Square_Num' 的值是 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tableV_FdCk.Square_NumColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Ck_Freight() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_FdCk.Ck_FreightColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("資料表 'V_FdCk' 中資料行 'Ck_Freight' 的值是 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tableV_FdCk.Ck_FreightColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Ck_Feed() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_FdCk.Ck_FeedColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("資料表 'V_FdCk' 中資料行 'Ck_Feed' 的值是 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tableV_FdCk.Ck_FeedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ECk_Cost() As Double
            Get
                Try 
                    Return CType(Me(Me.tableV_FdCk.ECk_CostColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("資料表 'V_FdCk' 中資料行 'ECk_Cost' 的值是 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tableV_FdCk.ECk_CostColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FCk_Cost() As Double
            Get
                Try 
                    Return CType(Me(Me.tableV_FdCk.FCk_CostColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("資料表 'V_FdCk' 中資料行 'FCk_Cost' 的值是 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tableV_FdCk.FCk_CostColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Feed_Cost() As Double
            Get
                Try 
                    Return CType(Me(Me.tableV_FdCk.Feed_CostColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("資料表 'V_FdCk' 中資料行 'Feed_Cost' 的值是 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tableV_FdCk.Feed_CostColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Back_Cost() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_FdCk.Back_CostColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("資料表 'V_FdCk' 中資料行 'Back_Cost' 的值是 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tableV_FdCk.Back_CostColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Mulite_Exp() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_FdCk.Mulite_ExpColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("資料表 'V_FdCk' 中資料行 'Mulite_Exp' 的值是 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tableV_FdCk.Mulite_ExpColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Bal_Exp() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_FdCk.Bal_ExpColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("資料表 'V_FdCk' 中資料行 'Bal_Exp' 的值是 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tableV_FdCk.Bal_ExpColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ECk_Rate() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_FdCk.ECk_RateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("資料表 'V_FdCk' 中資料行 'ECk_Rate' 的值是 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tableV_FdCk.ECk_RateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FCk_Rate() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_FdCk.FCk_RateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("資料表 'V_FdCk' 中資料行 'FCk_Rate' 的值是 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tableV_FdCk.FCk_RateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Feed_Rate() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_FdCk.Feed_RateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("資料表 'V_FdCk' 中資料行 'Feed_Rate' 的值是 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tableV_FdCk.Feed_RateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Back_Rate() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_FdCk.Back_RateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("資料表 'V_FdCk' 中資料行 'Back_Rate' 的值是 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tableV_FdCk.Back_RateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Mulite_Rate() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_FdCk.Mulite_RateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("資料表 'V_FdCk' 中資料行 'Mulite_Rate' 的值是 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tableV_FdCk.Mulite_RateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Bal_Exp_Rate() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_FdCk.Bal_Exp_RateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("資料表 'V_FdCk' 中資料行 'Bal_Exp_Rate' 的值是 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tableV_FdCk.Bal_Exp_RateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Ck_Days() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_FdCk.Ck_DaysColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("資料表 'V_FdCk' 中資料行 'Ck_Days' 的值是 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tableV_FdCk.Ck_DaysColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Chaff() As Double
            Get
                Try 
                    Return CType(Me(Me.tableV_FdCk.ChaffColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("資料表 'V_FdCk' 中資料行 'Chaff' 的值是 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tableV_FdCk.ChaffColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Disease_Pay() As Double
            Get
                Try 
                    Return CType(Me(Me.tableV_FdCk.Disease_PayColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("資料表 'V_FdCk' 中資料行 'Disease_Pay' 的值是 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tableV_FdCk.Disease_PayColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Power_Bill() As Double
            Get
                Try 
                    Return CType(Me(Me.tableV_FdCk.Power_BillColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("資料表 'V_FdCk' 中資料行 'Power_Bill' 的值是 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tableV_FdCk.Power_BillColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FirstStage() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_FdCk.FirstStageColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("資料表 'V_FdCk' 中資料行 'FirstStage' 的值是 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tableV_FdCk.FirstStageColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SecondStage() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_FdCk.SecondStageColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("資料表 'V_FdCk' 中資料行 'SecondStage' 的值是 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tableV_FdCk.SecondStageColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ThridStage() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_FdCk.ThridStageColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("資料表 'V_FdCk' 中資料行 'ThridStage' 的值是 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tableV_FdCk.ThridStageColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FourthStage() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_FdCk.FourthStageColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("資料表 'V_FdCk' 中資料行 'FourthStage' 的值是 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tableV_FdCk.FourthStageColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CK_Medicine_R1() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_FdCk.CK_Medicine_R1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("資料表 'V_FdCk' 中資料行 'CK_Medicine_R1' 的值是 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tableV_FdCk.CK_Medicine_R1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CK_Medicine_R2() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_FdCk.CK_Medicine_R2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("資料表 'V_FdCk' 中資料行 'CK_Medicine_R2' 的值是 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tableV_FdCk.CK_Medicine_R2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CK_Medicine_R3() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_FdCk.CK_Medicine_R3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("資料表 'V_FdCk' 中資料行 'CK_Medicine_R3' 的值是 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tableV_FdCk.CK_Medicine_R3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CK_Medicine_R4() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_FdCk.CK_Medicine_R4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("資料表 'V_FdCk' 中資料行 'CK_Medicine_R4' 的值是 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tableV_FdCk.CK_Medicine_R4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CK_Medicine_R1Amt() As Double
            Get
                Try 
                    Return CType(Me(Me.tableV_FdCk.CK_Medicine_R1AmtColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("資料表 'V_FdCk' 中資料行 'CK_Medicine_R1Amt' 的值是 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tableV_FdCk.CK_Medicine_R1AmtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CK_Medicine_R2Amt() As Double
            Get
                Try 
                    Return CType(Me(Me.tableV_FdCk.CK_Medicine_R2AmtColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("資料表 'V_FdCk' 中資料行 'CK_Medicine_R2Amt' 的值是 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tableV_FdCk.CK_Medicine_R2AmtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CK_Medicine_R3Amt() As Double
            Get
                Try 
                    Return CType(Me(Me.tableV_FdCk.CK_Medicine_R3AmtColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("資料表 'V_FdCk' 中資料行 'CK_Medicine_R3Amt' 的值是 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tableV_FdCk.CK_Medicine_R3AmtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CK_Medicine_R4Amt() As Double
            Get
                Try 
                    Return CType(Me(Me.tableV_FdCk.CK_Medicine_R4AmtColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("資料表 'V_FdCk' 中資料行 'CK_Medicine_R4Amt' 的值是 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tableV_FdCk.CK_Medicine_R4AmtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Subcontract_Pay() As Double
            Get
                Try 
                    Return CType(Me(Me.tableV_FdCk.Subcontract_PayColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("資料表 'V_FdCk' 中資料行 'Subcontract_Pay' 的值是 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tableV_FdCk.Subcontract_PayColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CatchCk_Pay() As Double
            Get
                Try 
                    Return CType(Me(Me.tableV_FdCk.CatchCk_PayColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("資料表 'V_FdCk' 中資料行 'CatchCk_Pay' 的值是 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tableV_FdCk.CatchCk_PayColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TrackAmt() As Double
            Get
                Try 
                    Return CType(Me(Me.tableV_FdCk.TrackAmtColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("資料表 'V_FdCk' 中資料行 'TrackAmt' 的值是 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tableV_FdCk.TrackAmtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SumAmt() As Double
            Get
                Try 
                    Return CType(Me(Me.tableV_FdCk.SumAmtColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("資料表 'V_FdCk' 中資料行 'SumAmt' 的值是 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tableV_FdCk.SumAmtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Remark() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_FdCk.RemarkColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("資料表 'V_FdCk' 中資料行 'Remark' 的值是 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tableV_FdCk.RemarkColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FdList_ID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableV_FdCk.FdList_IDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("資料表 'V_FdCk' 中資料行 'FdList_ID' 的值是 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tableV_FdCk.FdList_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Expr1() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_FdCk.Expr1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("資料表 'V_FdCk' 中資料行 'Expr1' 的值是 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tableV_FdCk.Expr1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CkKind_List() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_FdCk.CkKind_ListColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("資料表 'V_FdCk' 中資料行 'CkKind_List' 的值是 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tableV_FdCk.CkKind_ListColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FatherCk() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_FdCk.FatherCkColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("資料表 'V_FdCk' 中資料行 'FatherCk' 的值是 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tableV_FdCk.FatherCkColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MotherCk() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_FdCk.MotherCkColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("資料表 'V_FdCk' 中資料行 'MotherCk' 的值是 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tableV_FdCk.MotherCkColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SumCk() As Double
            Get
                Try 
                    Return CType(Me(Me.tableV_FdCk.SumCkColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("資料表 'V_FdCk' 中資料行 'SumCk' 的值是 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tableV_FdCk.SumCkColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FatherCk_Avg() As Double
            Get
                Try 
                    Return CType(Me(Me.tableV_FdCk.FatherCk_AvgColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("資料表 'V_FdCk' 中資料行 'FatherCk_Avg' 的值是 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tableV_FdCk.FatherCk_AvgColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MotherCk_Avg() As Double
            Get
                Try 
                    Return CType(Me(Me.tableV_FdCk.MotherCk_AvgColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("資料表 'V_FdCk' 中資料行 'MotherCk_Avg' 的值是 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tableV_FdCk.MotherCk_AvgColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Regard_Avg() As Double
            Get
                Try 
                    Return CType(Me(Me.tableV_FdCk.Regard_AvgColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("資料表 'V_FdCk' 中資料行 'Regard_Avg' 的值是 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tableV_FdCk.Regard_AvgColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Ck_Avg() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_FdCk.Ck_AvgColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("資料表 'V_FdCk' 中資料行 'Ck_Avg' 的值是 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tableV_FdCk.Ck_AvgColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Expr2() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_FdCk.Expr2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("資料表 'V_FdCk' 中資料行 'Expr2' 的值是 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tableV_FdCk.Expr2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Ckkind() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_FdCk.CkkindColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("資料表 'V_FdCk' 中資料行 'Ckkind' 的值是 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tableV_FdCk.CkkindColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ReturnQuantity() As Double
            Get
                Try 
                    Return CType(Me(Me.tableV_FdCk.ReturnQuantityColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("資料表 'V_FdCk' 中資料行 'ReturnQuantity' 的值是 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tableV_FdCk.ReturnQuantityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsInCk_dateNull() As Boolean
            Return Me.IsNull(Me.tableV_FdCk.InCk_dateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetInCk_dateNull()
            Me(Me.tableV_FdCk.InCk_dateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsOutCk_dateNull() As Boolean
            Return Me.IsNull(Me.tableV_FdCk.OutCk_dateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetOutCk_dateNull()
            Me(Me.tableV_FdCk.OutCk_dateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsInCk_NumNull() As Boolean
            Return Me.IsNull(Me.tableV_FdCk.InCk_NumColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetInCk_NumNull()
            Me(Me.tableV_FdCk.InCk_NumColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsOutCk_NumNull() As Boolean
            Return Me.IsNull(Me.tableV_FdCk.OutCk_NumColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetOutCk_NumNull()
            Me(Me.tableV_FdCk.OutCk_NumColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSumCk_NumNull() As Boolean
            Return Me.IsNull(Me.tableV_FdCk.SumCk_NumColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSumCk_NumNull()
            Me(Me.tableV_FdCk.SumCk_NumColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsGrow_RateNull() As Boolean
            Return Me.IsNull(Me.tableV_FdCk.Grow_RateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetGrow_RateNull()
            Me(Me.tableV_FdCk.Grow_RateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFeed_weightNull() As Boolean
            Return Me.IsNull(Me.tableV_FdCk.Feed_weightColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFeed_weightNull()
            Me(Me.tableV_FdCk.Feed_weightColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBack_weightNull() As Boolean
            Return Me.IsNull(Me.tableV_FdCk.Back_weightColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBack_weightNull()
            Me(Me.tableV_FdCk.Back_weightColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsConver_RateNull() As Boolean
            Return Me.IsNull(Me.tableV_FdCk.Conver_RateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetConver_RateNull()
            Me(Me.tableV_FdCk.Conver_RateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCk_SquareNull() As Boolean
            Return Me.IsNull(Me.tableV_FdCk.Ck_SquareColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCk_SquareNull()
            Me(Me.tableV_FdCk.Ck_SquareColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSquare_NumNull() As Boolean
            Return Me.IsNull(Me.tableV_FdCk.Square_NumColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSquare_NumNull()
            Me(Me.tableV_FdCk.Square_NumColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCk_FreightNull() As Boolean
            Return Me.IsNull(Me.tableV_FdCk.Ck_FreightColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCk_FreightNull()
            Me(Me.tableV_FdCk.Ck_FreightColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCk_FeedNull() As Boolean
            Return Me.IsNull(Me.tableV_FdCk.Ck_FeedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCk_FeedNull()
            Me(Me.tableV_FdCk.Ck_FeedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsECk_CostNull() As Boolean
            Return Me.IsNull(Me.tableV_FdCk.ECk_CostColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetECk_CostNull()
            Me(Me.tableV_FdCk.ECk_CostColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFCk_CostNull() As Boolean
            Return Me.IsNull(Me.tableV_FdCk.FCk_CostColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFCk_CostNull()
            Me(Me.tableV_FdCk.FCk_CostColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFeed_CostNull() As Boolean
            Return Me.IsNull(Me.tableV_FdCk.Feed_CostColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFeed_CostNull()
            Me(Me.tableV_FdCk.Feed_CostColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBack_CostNull() As Boolean
            Return Me.IsNull(Me.tableV_FdCk.Back_CostColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBack_CostNull()
            Me(Me.tableV_FdCk.Back_CostColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMulite_ExpNull() As Boolean
            Return Me.IsNull(Me.tableV_FdCk.Mulite_ExpColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMulite_ExpNull()
            Me(Me.tableV_FdCk.Mulite_ExpColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBal_ExpNull() As Boolean
            Return Me.IsNull(Me.tableV_FdCk.Bal_ExpColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBal_ExpNull()
            Me(Me.tableV_FdCk.Bal_ExpColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsECk_RateNull() As Boolean
            Return Me.IsNull(Me.tableV_FdCk.ECk_RateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetECk_RateNull()
            Me(Me.tableV_FdCk.ECk_RateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFCk_RateNull() As Boolean
            Return Me.IsNull(Me.tableV_FdCk.FCk_RateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFCk_RateNull()
            Me(Me.tableV_FdCk.FCk_RateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFeed_RateNull() As Boolean
            Return Me.IsNull(Me.tableV_FdCk.Feed_RateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFeed_RateNull()
            Me(Me.tableV_FdCk.Feed_RateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBack_RateNull() As Boolean
            Return Me.IsNull(Me.tableV_FdCk.Back_RateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBack_RateNull()
            Me(Me.tableV_FdCk.Back_RateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMulite_RateNull() As Boolean
            Return Me.IsNull(Me.tableV_FdCk.Mulite_RateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMulite_RateNull()
            Me(Me.tableV_FdCk.Mulite_RateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBal_Exp_RateNull() As Boolean
            Return Me.IsNull(Me.tableV_FdCk.Bal_Exp_RateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBal_Exp_RateNull()
            Me(Me.tableV_FdCk.Bal_Exp_RateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCk_DaysNull() As Boolean
            Return Me.IsNull(Me.tableV_FdCk.Ck_DaysColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCk_DaysNull()
            Me(Me.tableV_FdCk.Ck_DaysColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsChaffNull() As Boolean
            Return Me.IsNull(Me.tableV_FdCk.ChaffColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetChaffNull()
            Me(Me.tableV_FdCk.ChaffColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDisease_PayNull() As Boolean
            Return Me.IsNull(Me.tableV_FdCk.Disease_PayColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDisease_PayNull()
            Me(Me.tableV_FdCk.Disease_PayColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPower_BillNull() As Boolean
            Return Me.IsNull(Me.tableV_FdCk.Power_BillColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPower_BillNull()
            Me(Me.tableV_FdCk.Power_BillColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFirstStageNull() As Boolean
            Return Me.IsNull(Me.tableV_FdCk.FirstStageColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFirstStageNull()
            Me(Me.tableV_FdCk.FirstStageColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSecondStageNull() As Boolean
            Return Me.IsNull(Me.tableV_FdCk.SecondStageColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSecondStageNull()
            Me(Me.tableV_FdCk.SecondStageColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsThridStageNull() As Boolean
            Return Me.IsNull(Me.tableV_FdCk.ThridStageColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetThridStageNull()
            Me(Me.tableV_FdCk.ThridStageColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFourthStageNull() As Boolean
            Return Me.IsNull(Me.tableV_FdCk.FourthStageColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFourthStageNull()
            Me(Me.tableV_FdCk.FourthStageColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCK_Medicine_R1Null() As Boolean
            Return Me.IsNull(Me.tableV_FdCk.CK_Medicine_R1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCK_Medicine_R1Null()
            Me(Me.tableV_FdCk.CK_Medicine_R1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCK_Medicine_R2Null() As Boolean
            Return Me.IsNull(Me.tableV_FdCk.CK_Medicine_R2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCK_Medicine_R2Null()
            Me(Me.tableV_FdCk.CK_Medicine_R2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCK_Medicine_R3Null() As Boolean
            Return Me.IsNull(Me.tableV_FdCk.CK_Medicine_R3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCK_Medicine_R3Null()
            Me(Me.tableV_FdCk.CK_Medicine_R3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCK_Medicine_R4Null() As Boolean
            Return Me.IsNull(Me.tableV_FdCk.CK_Medicine_R4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCK_Medicine_R4Null()
            Me(Me.tableV_FdCk.CK_Medicine_R4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCK_Medicine_R1AmtNull() As Boolean
            Return Me.IsNull(Me.tableV_FdCk.CK_Medicine_R1AmtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCK_Medicine_R1AmtNull()
            Me(Me.tableV_FdCk.CK_Medicine_R1AmtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCK_Medicine_R2AmtNull() As Boolean
            Return Me.IsNull(Me.tableV_FdCk.CK_Medicine_R2AmtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCK_Medicine_R2AmtNull()
            Me(Me.tableV_FdCk.CK_Medicine_R2AmtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCK_Medicine_R3AmtNull() As Boolean
            Return Me.IsNull(Me.tableV_FdCk.CK_Medicine_R3AmtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCK_Medicine_R3AmtNull()
            Me(Me.tableV_FdCk.CK_Medicine_R3AmtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCK_Medicine_R4AmtNull() As Boolean
            Return Me.IsNull(Me.tableV_FdCk.CK_Medicine_R4AmtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCK_Medicine_R4AmtNull()
            Me(Me.tableV_FdCk.CK_Medicine_R4AmtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSubcontract_PayNull() As Boolean
            Return Me.IsNull(Me.tableV_FdCk.Subcontract_PayColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSubcontract_PayNull()
            Me(Me.tableV_FdCk.Subcontract_PayColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCatchCk_PayNull() As Boolean
            Return Me.IsNull(Me.tableV_FdCk.CatchCk_PayColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCatchCk_PayNull()
            Me(Me.tableV_FdCk.CatchCk_PayColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTrackAmtNull() As Boolean
            Return Me.IsNull(Me.tableV_FdCk.TrackAmtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTrackAmtNull()
            Me(Me.tableV_FdCk.TrackAmtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSumAmtNull() As Boolean
            Return Me.IsNull(Me.tableV_FdCk.SumAmtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSumAmtNull()
            Me(Me.tableV_FdCk.SumAmtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRemarkNull() As Boolean
            Return Me.IsNull(Me.tableV_FdCk.RemarkColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRemarkNull()
            Me(Me.tableV_FdCk.RemarkColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFdList_IDNull() As Boolean
            Return Me.IsNull(Me.tableV_FdCk.FdList_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFdList_IDNull()
            Me(Me.tableV_FdCk.FdList_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsExpr1Null() As Boolean
            Return Me.IsNull(Me.tableV_FdCk.Expr1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetExpr1Null()
            Me(Me.tableV_FdCk.Expr1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCkKind_ListNull() As Boolean
            Return Me.IsNull(Me.tableV_FdCk.CkKind_ListColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCkKind_ListNull()
            Me(Me.tableV_FdCk.CkKind_ListColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFatherCkNull() As Boolean
            Return Me.IsNull(Me.tableV_FdCk.FatherCkColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFatherCkNull()
            Me(Me.tableV_FdCk.FatherCkColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMotherCkNull() As Boolean
            Return Me.IsNull(Me.tableV_FdCk.MotherCkColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMotherCkNull()
            Me(Me.tableV_FdCk.MotherCkColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSumCkNull() As Boolean
            Return Me.IsNull(Me.tableV_FdCk.SumCkColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSumCkNull()
            Me(Me.tableV_FdCk.SumCkColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFatherCk_AvgNull() As Boolean
            Return Me.IsNull(Me.tableV_FdCk.FatherCk_AvgColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFatherCk_AvgNull()
            Me(Me.tableV_FdCk.FatherCk_AvgColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMotherCk_AvgNull() As Boolean
            Return Me.IsNull(Me.tableV_FdCk.MotherCk_AvgColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMotherCk_AvgNull()
            Me(Me.tableV_FdCk.MotherCk_AvgColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRegard_AvgNull() As Boolean
            Return Me.IsNull(Me.tableV_FdCk.Regard_AvgColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRegard_AvgNull()
            Me(Me.tableV_FdCk.Regard_AvgColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCk_AvgNull() As Boolean
            Return Me.IsNull(Me.tableV_FdCk.Ck_AvgColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCk_AvgNull()
            Me(Me.tableV_FdCk.Ck_AvgColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsExpr2Null() As Boolean
            Return Me.IsNull(Me.tableV_FdCk.Expr2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetExpr2Null()
            Me(Me.tableV_FdCk.Expr2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCkkindNull() As Boolean
            Return Me.IsNull(Me.tableV_FdCk.CkkindColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCkkindNull()
            Me(Me.tableV_FdCk.CkkindColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsReturnQuantityNull() As Boolean
            Return Me.IsNull(Me.tableV_FdCk.ReturnQuantityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetReturnQuantityNull()
            Me(Me.tableV_FdCk.ReturnQuantityColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class V_FdCkRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As V_FdCkRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As V_FdCkRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As V_FdCkRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace KaiShingPlugDataSetTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class V_FdCkTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "V_FdCk"
            tableMapping.ColumnMappings.Add("FdCk_ID", "FdCk_ID")
            tableMapping.ColumnMappings.Add("SerialID", "SerialID")
            tableMapping.ColumnMappings.Add("InCk_date", "InCk_date")
            tableMapping.ColumnMappings.Add("OutCk_date", "OutCk_date")
            tableMapping.ColumnMappings.Add("InCk_Num", "InCk_Num")
            tableMapping.ColumnMappings.Add("OutCk_Num", "OutCk_Num")
            tableMapping.ColumnMappings.Add("SumCk_Num", "SumCk_Num")
            tableMapping.ColumnMappings.Add("Grow_Rate", "Grow_Rate")
            tableMapping.ColumnMappings.Add("Feed_weight", "Feed_weight")
            tableMapping.ColumnMappings.Add("Back_weight", "Back_weight")
            tableMapping.ColumnMappings.Add("Conver_Rate", "Conver_Rate")
            tableMapping.ColumnMappings.Add("Ck_Square", "Ck_Square")
            tableMapping.ColumnMappings.Add("Square_Num", "Square_Num")
            tableMapping.ColumnMappings.Add("Ck_Freight", "Ck_Freight")
            tableMapping.ColumnMappings.Add("Ck_Feed", "Ck_Feed")
            tableMapping.ColumnMappings.Add("ECk_Cost", "ECk_Cost")
            tableMapping.ColumnMappings.Add("FCk_Cost", "FCk_Cost")
            tableMapping.ColumnMappings.Add("Feed_Cost", "Feed_Cost")
            tableMapping.ColumnMappings.Add("Back_Cost", "Back_Cost")
            tableMapping.ColumnMappings.Add("Mulite_Exp", "Mulite_Exp")
            tableMapping.ColumnMappings.Add("Bal_Exp", "Bal_Exp")
            tableMapping.ColumnMappings.Add("ECk_Rate", "ECk_Rate")
            tableMapping.ColumnMappings.Add("FCk_Rate", "FCk_Rate")
            tableMapping.ColumnMappings.Add("Feed_Rate", "Feed_Rate")
            tableMapping.ColumnMappings.Add("Back_Rate", "Back_Rate")
            tableMapping.ColumnMappings.Add("Mulite_Rate", "Mulite_Rate")
            tableMapping.ColumnMappings.Add("Bal_Exp_Rate", "Bal_Exp_Rate")
            tableMapping.ColumnMappings.Add("Ck_Days", "Ck_Days")
            tableMapping.ColumnMappings.Add("Chaff", "Chaff")
            tableMapping.ColumnMappings.Add("Disease_Pay", "Disease_Pay")
            tableMapping.ColumnMappings.Add("Power_Bill", "Power_Bill")
            tableMapping.ColumnMappings.Add("FirstStage", "FirstStage")
            tableMapping.ColumnMappings.Add("SecondStage", "SecondStage")
            tableMapping.ColumnMappings.Add("ThridStage", "ThridStage")
            tableMapping.ColumnMappings.Add("FourthStage", "FourthStage")
            tableMapping.ColumnMappings.Add("CK_Medicine_R1", "CK_Medicine_R1")
            tableMapping.ColumnMappings.Add("CK_Medicine_R2", "CK_Medicine_R2")
            tableMapping.ColumnMappings.Add("CK_Medicine_R3", "CK_Medicine_R3")
            tableMapping.ColumnMappings.Add("CK_Medicine_R4", "CK_Medicine_R4")
            tableMapping.ColumnMappings.Add("CK_Medicine_R1Amt", "CK_Medicine_R1Amt")
            tableMapping.ColumnMappings.Add("CK_Medicine_R2Amt", "CK_Medicine_R2Amt")
            tableMapping.ColumnMappings.Add("CK_Medicine_R3Amt", "CK_Medicine_R3Amt")
            tableMapping.ColumnMappings.Add("CK_Medicine_R4Amt", "CK_Medicine_R4Amt")
            tableMapping.ColumnMappings.Add("Subcontract_Pay", "Subcontract_Pay")
            tableMapping.ColumnMappings.Add("CatchCk_Pay", "CatchCk_Pay")
            tableMapping.ColumnMappings.Add("TrackAmt", "TrackAmt")
            tableMapping.ColumnMappings.Add("SumAmt", "SumAmt")
            tableMapping.ColumnMappings.Add("Remark", "Remark")
            tableMapping.ColumnMappings.Add("FdList_ID", "FdList_ID")
            tableMapping.ColumnMappings.Add("Expr1", "Expr1")
            tableMapping.ColumnMappings.Add("CkKind_List", "CkKind_List")
            tableMapping.ColumnMappings.Add("FatherCk", "FatherCk")
            tableMapping.ColumnMappings.Add("MotherCk", "MotherCk")
            tableMapping.ColumnMappings.Add("SumCk", "SumCk")
            tableMapping.ColumnMappings.Add("FatherCk_Avg", "FatherCk_Avg")
            tableMapping.ColumnMappings.Add("MotherCk_Avg", "MotherCk_Avg")
            tableMapping.ColumnMappings.Add("Regard_Avg", "Regard_Avg")
            tableMapping.ColumnMappings.Add("Ck_Avg", "Ck_Avg")
            tableMapping.ColumnMappings.Add("Expr2", "Expr2")
            tableMapping.ColumnMappings.Add("Ckkind", "Ckkind")
            tableMapping.ColumnMappings.Add("ReturnQuantity", "ReturnQuantity")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.KSSystem.My.MySettings.Default.KaiShingPlugConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT FdCk_ID, SerialID, InCk_date, OutCk_date, InCk_Num, OutCk_Num, SumCk_Num, "& _ 
                "Grow_Rate, Feed_weight, Back_weight, Conver_Rate, Ck_Square, Square_Num, Ck_Frei"& _ 
                "ght, Ck_Feed, ECk_Cost, FCk_Cost, Feed_Cost, Back_Cost, Mulite_Exp, Bal_Exp, ECk"& _ 
                "_Rate, FCk_Rate, Feed_Rate, Back_Rate, Mulite_Rate, Bal_Exp_Rate, Ck_Days, Chaff"& _ 
                ", Disease_Pay, Power_Bill, FirstStage, SecondStage, ThridStage, FourthStage, CK_"& _ 
                "Medicine_R1, CK_Medicine_R2, CK_Medicine_R3, CK_Medicine_R4, CK_Medicine_R1Amt, "& _ 
                "CK_Medicine_R2Amt, CK_Medicine_R3Amt, CK_Medicine_R4Amt, Subcontract_Pay, CatchC"& _ 
                "k_Pay, TrackAmt, SumAmt, Remark, FdList_ID, Expr1, CkKind_List, FatherCk, Mother"& _ 
                "Ck, SumCk, FatherCk_Avg, MotherCk_Avg, Regard_Avg, Ck_Avg, Expr2, Ckkind, Return"& _ 
                "Quantity FROM dbo.V_FdCk"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As KaiShingPlugDataSet.V_FdCkDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As KaiShingPlugDataSet.V_FdCkDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As KaiShingPlugDataSet.V_FdCkDataTable = New KaiShingPlugDataSet.V_FdCkDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As KaiShingPlugDataSet, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Function UpdateInsertedRows(ByVal dataSet As KaiShingPlugDataSet, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Function UpdateDeletedRows(ByVal dataSet As KaiShingPlugDataSet, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function UpdateAll(ByVal dataSet As KaiShingPlugDataSet) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager 未包含連接資訊。請將每個 TableAdapterManager 的 TableAdapter 屬性設成有效的 Table"& _ 
                        "Adapter 執行個體。")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("無法開始交易。目前的資料連接不支援交易或是目前的狀態不允許交易開始。")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
            Private Function IsChildAndParent(ByVal child As Global.System.Data.DataRow, ByVal parent As Global.System.Data.DataRow) As Boolean
                Global.System.Diagnostics.Debug.Assert((Not (child) Is Nothing))
                Global.System.Diagnostics.Debug.Assert((Not (parent) Is Nothing))
                Dim newParent As Global.System.Data.DataRow = child.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (newParent) Is Nothing)  _
                            AndAlso ((Object.ReferenceEquals(newParent, child) = false)  _
                            AndAlso (Object.ReferenceEquals(newParent, parent) = false)))
                    newParent = newParent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop
                If (newParent Is Nothing) Then
                    newParent = child.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)
                    Do While ((Not (newParent) Is Nothing)  _
                                AndAlso ((Object.ReferenceEquals(newParent, child) = false)  _
                                AndAlso (Object.ReferenceEquals(newParent, parent) = false)))
                        newParent = newParent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If
                If Object.ReferenceEquals(newParent, parent) Then
                    Return true
                End If
                Return false
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                'Is row1 the child or grandchild of row2
                If Me.IsChildAndParent(row1, row2) Then
                    Return Me._childFirst
                End If

                'Is row2 the child or grandchild of row1
                If Me.IsChildAndParent(row2, row1) Then
                    Return (-1 * Me._childFirst)
                End If
                Return 0
            End Function
        End Class
    End Class
End Namespace
